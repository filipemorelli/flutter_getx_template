# Automatically generated on 2021-06-07 UTC from https://codemagic.io/app/60be1666362aac9148b3b88f/settings
# Note that this configuration is not an exact match to UI settings. Review and adjust as necessary.

workflows:
  master:
    name: Prod
    max_build_duration: 60
    environment:
      vars:
        GPG_PASS: Encrypted(Z0FBQUFBQmd5OUpDXy1GOEMwcEEtTXV2ODI4bGxrQTFEeUxJU3BhUzBqWmNHNEJqR2UxXzJfY0pFQS1kS3k3cWp3S2NVSUthd0s0eU90cXZDR3VXUWFtamtwNURHa2tRa2c9PQ==)
        GPG_KEY: Encrypted(Z0FBQUFBQmd5OUpDeHlERW1YVVNuQktxNG9lMFhPVzA3Y3E0d0Y1bFVJanBFQWx6TGN5eXhDamVXbXpmbzJ6dkN4VjBncTYtTzdISm5PZXhfMTBHZ2NBdUlaTWktSG4yNXloekkzQk5IT3NUdU9jZEl1V0ljT043QXdwVmdIaEktVXVzUTNhV3h1YmViOWw3cVBJQURTMjVoSGFGbGVGYWpIbWN3YVZWTTA5ZU9Iclc3TjFIbnQ5SWxGeVZveHk2ZlY3QnVNb3RZVExURjEtSVNwNWZmRTNmQk9PMS1Pd2pFU3Y4ZjlXWnRZaTJwWjczUWpSRk5ZaHVQbk1ZTXpXTlRmTjFpVjRZd0NTTk1Yd2VvVzl2YjFJUFZ6NUZpRHB5MVpHaEhmR0pfN0g4eGg4dURTa1p6bnM0UVJTSUNEbHBIbDZNM19CQVp4T1Q2bzBaTm5iN0pjSThILTFLN1ZrVkhxQkQtWnBsNU5EQloyZmxad1hScnA0VzJsd2dYTXczQ21tSVRBVE5mZVFZV05HZG5wZ2w4eFR2M1NGU3dJakJleFJfRnlUTkNPRUUwWXE4VDdXSUlyQjdOVWFFRW85Y1B1ZTNweWxSMmZIU0VpRDV5TmFpM3ZNY3pJS0hlZHlFMjBYOVAxVmliQWVEcW1sQnRidFowMUVxSldwM3FCWjFQSG1BTEo1TF9xbmdJR0NSdll2VndRSzNEVUVqQnBmOVpDbWNSNzFQUnNDeUNDYmx1RmdzRDNZRVp1SlpPYV83X3VkenozTTB3bHR0MlROSl9RZGlheUY5clVjZnRRYzdZRUg5ZkRrenRyaWM0LTF1Qm96c2ZwZTRNOWZqU00zdXpSRDlxRmVnOWp4X0JuS1VfbXlZbVlqMTU4VXdHUTd2azN4N181N2xSU3lhLW1TbGUyOHVzUlAyVEZrOWVWNXhybWY4VngtdGNRWUVneDR2MlFMN1dLUHQtSmpBYWJYRW9jakNibVpIaFVSeVFQbWhDZmhJWWRtNXZ4UDVDaGJ4WUxJaE5ZX1BQdHlfQnBKbmZXRG9NUFZEek1FN3ZSWkhSNmQxdWZrS1k3WkdnRmZIWl9fRWRrdFFoY2I4YXJRRlJVdVVBVmZpRlZfQUt0T2pBUUpsWnFmVEl2WEFWNzJ4TlFxODcwamkyUzdlTW85R3c1bWR5LS1MMlZKVGtPa1VhTURYeDJGVmRrMFRxWkRXel9obzJhcVY1WU9lbUJZcExFaGZQMERZYmVieWpGYXZaLTExbTFMb2RUWUhvQlo1bUVxVklmWF9HeXRXcDc1b0dON21nTFBUYUVkOEJWRTg5a19jaFhvWmREUllwd2wwdWxWbTEtODJJRG42TW1Za2JvVGE3ZjRWQ2NQSnRNb3NiaTdJai1Lek5kZm8zbkRMNWZKYW1WRTBkaTJycTVPQkNNTEFyclh4MDYwdzR0NUxpQTk4ZXJ6UTJkSWxNbmVkb1VKM1gwR3JTWGZqV0xPMlJ0VWU3dEIxTGtiSUJ6ejdJaGtISXhNS2dwTDJCQlZWVFg0bGQ1Y2E5aFZVWEJDazRmMFlfX0x1QzN6dXN2dzJnX0ZVczdfTmRBbXFnaTN2UHoxV2kzSzBka1F6RmhVQ3JpMGtHeFhCVEh6VmdOcWtUbWZUaUk1dE1NX2YxQkR1RWk4MllyUDgwdVNDektkZDhOQ2FkV3pwM2VjampfVnhFRFZ0Sm5TWXh2VDFjYlMwX3ZaMTNsUHpfMFlrVjM0U3BOOTlqU0NQTGJvZlpjbjFpeC1BQnBtNWx3SXVEOW1lNkFEbVNZUDRTenpJdnR0eTVhOVFEMF9pQUljdWpsUUdRbXV2ODZHdHFNUHVId1NJeE1hZTFvZkx4ekhDZkRXZTl0NTY1aF9GdmlGR1YyUVZvYkxaU3dYbTZGcmdvbGpjNDA1bFBtLTdYOWl1dTEzd2hfczJMNlNZQ2VnZUthcEs4THAxbVZ6RGM4Znlya1VTT2JsRm5WMGYwT2thcVlsM3c2YjE0UV80Sk5pNXg3UUt2ZThLYTVSUUlZU2g4N0kxRHdJSnU1ZHIzUUNHWndBblcybkNoMTNzUjd0WFV6V3Fobjk5aWZzZXFFV0tXekhrY1ZtMThqcHJqamFxOHo5Y2N2YzhraDQ5VUlBUDZ1N2lXTGhyUUdtRVJ3bzAyMkVQOVBrb3BHa0tWOGJlbTUwa2tBbjBzMUZWNlpwcXR3ZXZaRHZuUlJFSHJnWFZwaVo0eEdNVjFDT1JfTmlFSzl3ZGFmaWgxalFJUWdpQS1tLUtEbEpKUDZGSjJhR0VIVTE3d19xMmFFWnlNMzFDZVo0ZmZzZ1Rob3hGVE4xWEFYWnFMSEVMdmRjMS1LUlhFRFcwMXlVSDdQUmJ2dkdKY0UyXzVnZXZvSzM1M25vQ1pWaWo1LVB2SnRPNXpUblI0dWMxcEpQZkloVW9HNHBQNGlZRU1yUWRvY3BuREhuNzJxVG9fREFJbmttd2MwX1NERzNSN0RlS3VyVjNrWVRQSHBLbFdVaHQ0S05xQTV1Rk1kUTlGMzdjNzdDTWI5WUFQV3RkYTZRTWZxcnlaSThRTjRDSVczWE5pa2FpWkpOUjk0TTk2bVluNlRLeHJYalNNNmkxNTFUTzVLMDUxQW5WMXkyQktvVWhTVDEwdjlRNlN4LURnMkkweHN0WUo5eVo4OFNwNTZDMl9FRXJLZkRTT3AtRnl4LVJsWkNlTl9yZU45eWhoQlFuMFdiVDZmWVhnRXFSdU50dEV1eTBlc3c4SXE0RlpvYVlCMTZ3OVRPNzFudDlHWW94S0Z2U2xoRVNuVGlaTUhETndHaWZYcVdycEljYWw3emh2RkRianJGdWphblQtQ3R5MFN1UHc5dzgzcmxGZko1S29VaVpQWjlWc2JXYVVNaU9IMUl0Ry1qWFIwSmFqMC1zRGQwN2l4OWRvSDFZcURQTmNLeHJmZzZ4QlZwM1dHdW1odVZCOUN2M0NsX2NpendvMXUtWl9FdS1FbjdCV0ZZQndVakRLeE9tMGFVa09jUXBFYlh1Z29ia0FDZU9wdTNDbXhKWldmNDBDbTI1Wnp6MkxqelYycV9CdkdGSG8wN2tXNmxMb19WY1BmWThwVHFJQ2Q3WmJqZXNvbWFuak92dHNQUlZ1VlU0M3FKc2pfcFNPZVBtdWZBbmE5T1NaZWk2bS1NUWdmc0xNcUtTNlNPNkROZm5Mc0lZVjFBRU5NTDZDR1hTcFk4R3Q4cHVJRVlPaWxEVVlKRzEtR1ZmWDR5cms0SGxXeXNJQTNieTBBelZfVmZGMUxDQXJDZWtyeUpNVUNDbE5IemRaZWsxVEEzM29TMlh4NHdpdnpvSFpnbWVuaWZ0X0E2WGI2QjhKbExMSk1rMUpLVW9PTXJydVFoS3ZZck00QkVRQWZkYl9ncWk3bVJoRkdKUXpNZm11bG5LSGNrVlZacWQzSzVWQmNNQjNOQURERnpzWUJrczhpWFY2MFlwRERmTkJWckNlbEY3ZnpsUzR4SzBKZTlld2NwTnRpVG5QZFBqMTlCaVRXYmdxMU9LbkNvZW9Wd3AwcXduT0phZmRFUjhZM182V0VQOFFFa21qem1pUklXaVRrcGFsYW5IMVpYR2lXTHpzNTFFSi1MN1M2UENmWVUzTjloVkxFNFRRMXpNVTFHNnAtWkxqdVBqTm9LNDJ5OXFvWFV4d1pUeTZIYldRTW5PakprdjBKXzZaSEFjVDZwcnVnWGxLUk4xR0IxcW9mb0hMYlZMZjN1MndMQ18ySGVmMUxzUlRkVVloRkV2ckN6dWxxbGM3ZUtSV0NNLU5SVmxrT21hLVZnY244MWcxOVFwSW4xVnpZTVp0dVpFMEpvRW9SZGEtNmF1b1ZmTkc5bnZFV1l5XzZpUUhPamlfdUZSa3I1WEYtQVA0bnVZSndPSWRyZWQ3SWRUbWNrM1ZUVkxYYWM5S3lYaGY5ZjE4b0d5ZXhkdHhMaWp1OUJIM1ZySGJWdEJ4VHVKOS1SNzlIVUJoQTdSc293X1o5R1NpR2RCUXdpTjdCZGNFUGdacUk1dUpQUjc3TXhhLXBMS2NwQXlaek8teV9EUlg3ZEEtUmZUN29sc0Qxd0JOS1RPMmdMQ1VYczF1RWpqd29tdlhlS0lVN204bmhHMlFneU5mZVBSaWllV3RLZWg4b1psaUo2bjJ6amVIb2RHbEZLeXJpVHZtcGpVV0JUb24zN3ZBbndBeE1PZVJOUkpjYnA0bURnQl9YZTQtRklVTHROWWlDX0V3UWZfY3N3Q1JDeGpZeXZsa3Z1NVQ5ZHVhTlhOZlZqc3FGdFNReFlyWS1GWmJSbnRzTXdja3lMcC00RTBJSlVwNWdFdWJFbEZGY1JoSERKcTJjcHZMamk5TmJVaVIwaE40cjRLZHZZQkZCekRhLXY5WUFZUklLbnBPX1RpaS1oazNrZU0zbGNwWEZRMkE3UlRGbVJpMkFzVjhZd2pVb2cyQWc9PQ==)
        APP_CENTER_PROJECT: flutter_getx_template
        APP_CENTER_USERNAME_ORGANIZATION: morellitecinfo-gmail.com
        APP_CENTER_TOKEN: Encrypted(Z0FBQUFBQmd2OEo0S3JMVkZLcFFzUGRPSXFoZGZ2WHc0Tm83enJIeWNib1g2elRWUlVhaU85bFdES1JCOXBUMDN2b01TeHB3UXlabE43VURnVTVXZG40OGQ5ZTgxeV8yWUZKWVlmbjJCbzdUbl9tTXpwakpxWjhlUmFVcTVpX19PeU1qMXRSY2FsMjM=)
        FCI_KEYSTORE_PATH: /tmp/keystore.keystore
        FCI_KEYSTORE: Encrypted(Z0FBQUFBQmd2b0VmSy1yUHplcVItMXVqVnB6NnRxS2w1NlVtZEQ4RENGSEhSdFRvYjlWcGhWR09kZWxGYnJnUEQ4TXB6d0JQak5qWHpOTW1yV2N3RmFCWG1Ob2NDVlVpX293N1NxaElRMG42d2p5WkJxNk8tem5DeTk4UGlQOEJ0dXkya01obC1vWWtYOFBsXzZxSkV4LU44UzhuUWpFRFhjMGI2anNzMUtCdkRRMl9ud1VkdFVWb0lEVUNjUF9XYWhQU1YxM1VJQXN3bUZkLTZ1NFZIM1l4b1hoWFRtajFlV1o5dHhyLVBZa3lpVlRIZDVyNVA4SHVFRV81Y1ZjM01CQVhwMF9JTG5UbV84ZnpaS1VHZjRhR0dUMkdfVXMzS1FFdGZ2VzBDVkg1OVRhWS1KNE90di16YUpHM3VhMFJnN3RGNnNOY0ozTV9uWFFkTHJMRVRncnpzZk9ZZUpSU2I2RVU2aXZfRTNUREtleFhpRi1TczgybjkxX25tNGRFOXQ0aWVGZmFWQ3dtUUM4aVpWZWRiVDI5b2U1LVAxSTU5SVRyZ1dqQXpFYUZCTTE2ZVlGcngtekFObEN5bVMwekZtU0hOV29KUXMtUmhkQU15SGUtSVNnQTE0OEtFWWZNeU1iZ20yWjR0N3Ztd2t5OE4tSkZ4cGhOd0dxa1ROaUt4YkVXOHVFSFFhQ1hTRGFRdC1ueVBFU2J3di1aN1R1aDVRWHZvekhwWnNjRkdkRjEzUXhxYVFjNU8tTVJ1dUhwQ2FLRk9vRzMzYVVldHQ0ejNYNzBwbkVRNzF0Q185LVJfenhZMkxYb0pLZTg0ZW8wLVhnOWNMeTQ2d0cxSWxQRV9yRXlaUzJ3WjdFZTFlN0xSMjN5T3lKNUg4dDd3WTRjODJlS0NYS0VqanY4Z2JrbU5DcTRpLTRrVHNIaXlGeUVFOGxWS2o2UF9UbXBxMmVVaDlnQlN6QU9MM2xYWEFZdTM1bnJTME5ldUYwSDhFaTZuSHZ4X0pkOUl5eVhHaUJnSUs5R21MM0hXdEFVT19QOGRTa1pGcDV4cmx6bDg2X1YtbDZBdklPaFFRQ09GYTFtUkFpY1dneXFnWGNrVUdXaFpGSW5zS0R6Q0ktZU1QS0FTRm5nSHI5VXBBTjhjUVQ4eDdpdGVPS3Nva2g0UmNhMlh4bHhjZVM2dDdQMldCeG5ZOGVORk1DeXN0OEllWG5sNlg2ekpGUllrOHJDbjdOWUYwT0xZUUJyNTFPSHJlOUdRR3lTMEE1Q1U1Z2taU2VfU2RES3gtYk1QV29lZVRrUG82dk0zUUZXVjFmWUFMbDNKZjRTMGltQk1Ma2h3SmlPX2swNG9NZ25MNGdVY25XY3Q4bUNHYnVCLV9iRkQwcGhIRUp2d00yMGlHeXdqTFE1TWRucW5vNmNIWGZzWGdlMUZRdEtKNnR4Wl9JVEVFYjRidTlwUl9YbkVHZ05WdVBGalUyVkRFRENCRzMteFM4bnlpdmhWUHE4RUtyOWloR19Zb2xHMGFQNXFRMFFyWF9zMFA1bks4VGpUbFIwSUc4bWU4Zm5IWWxUVDZzUWNhT2tiM3BYSERuMHVHeThCajZteTR4VkV6aXE2bzAwZ2lFQVk2cUJWWHdNSUxPUjZaZTBUM3JMcUd4TmFWZGNBOGk2WlFNYU90WXBhUlRTcFd4MVVqSnJNbm1tV1lseE9CTWlST3RFUlNSSTVEeW5ueUVhNW9qSGVTcGJqNDdwSWVNcHk5Zll2MkRReHI4NklqcWhuejZndDhWM01ZSUh1bHY3dVZVLTNWRlliUURkell3YldfQjdxUVZFV2ZLaUs5ek1XcDd6M3RGM1RySVdlNExXVzhhTUxtWFNXbEVfdVVZRktTM2xRTHRIZkdtMnRnSlh1eHdHZ1R0X0RqaDczRURTU2ptT3p6OHhRbUJMaWtUY3o5TWlpTnNJSkl0a3hiWF9MRGdxVHEyX2xHSG11UmJrdVpIUkkyTVBRb0xiUW5XbnJvZG11ZjV3M0ZWd0o3R0VoQVNDcEFTa1oxaDB6enBLMUVHOWVTWlM2RVVwY2YtbGdWRHFabG9vVGNoWG15LTlDc2lxcE11REZUNjRMei1paE5uVE1RX2V1a3dDTmd2Zzk1WldId0x1TXd2aHR2WXNzWFgwb3dvX2ZIamRwclRYSGFVcmE1YmtFa1E1WHRPYXZZZVowa3lyYy1fcGRiQllISWVLQ1RVR3BPTy01YWp2bUFoRVdYOWRTUURoc2tLSnVqanB4VEdkVVJBT3B6bUR3aVE4NHFGY0I3N3hsaVkxNmVON09teEotc1VLV3NlcVRNU2dKaUxTWmZCZ1laUDdZV0NrMlVMQXRhUFJrM2NTV2htVEhIZ09Xam5HTnh1bjBqWWxfcTB6U0RkMUhjZGpONjZrRFp0cnl4aVBOSTh1Z2lJMTFnUlpTcWNKbGo0dW1ZcUFZQWVPdlRKdVVSR3puT1lET056WjNPdWY2NTlFNVA2MjI1SzM4eENYbkJ3UVFCbkVLYjBobDlQV0dacmtZMXc0U3ZmbWJsR19BX2JjM0JGa1RNMnFoS0t1NXdiNUczbUtHQnFLR1ZZbWpudDU0U1RYb0poMkd4LTZDZFVUeEhDTGRQdE5UdVM5WG9DYllfRW50RzVrVERXRUJzRzNGZmFSUXZDSkxlbHZUMUdDUFlaV1RJSmdOdmFfS2hRWnNPYUp1TjhGczJXTlJxZnNlQzJSOUhpX0w1RG9FUmpvajlZd0xDSW9wQWx0VUY1dlBJVGUzbVpILWNNMFJzS29XT2FBUVFmTUZZYjBoelpXbmtKaU41emRYdkFPcjlSTUdHZklybEUtOEFZTnEwRUhoTllsZlUwQ2VYdFNqSnN3YkEtZjdFb1BqaXRKSTA0eEthZG04ZUZPZlE1VGFWbnlNZmVkZjZCdU9VR2VuZF9ROVBPSm14ZGVBT0dwYng4eUFXNU8wcDJBTmUtZVQyV3VvclFJVmRfeWc4ejg5UjN6WWNfQW9QX2FYQW5XN0JrUVkwTkxveE80Y2dNZmh2ajdnSm1zYU5qcDJfRXNqUXlselpqcG0yNEhOTHU1QlpGdXdfZkhGcnJyX2dFLVBYWUxmd0ljWHE2MExaYUxvd1Z2dWZwNUpXWWZPVEJ3OTd4ZHBQTlRlSDJpRzhGZUYybnQ0M1haNjA4OGxpTVNQa0JtYUgwVVdVRjNyRjlydjZTVTdNWGJVbU9VRFNGbzc2ZDEzd2dwUmx5cmtrblh0RUROaVhvRlN2cHFtNzRnN0FOZGZXZTM4SG9GSDFkRm01U1JUUy1HMVNxZjNkbENCWWtoMHEyVkthVG9YQ2Y3M0JfekhMS3ppcTBiVkVtLTlVc1dIazF3ekt6NDJiVGxKRlFFaEtkLUgzbzVxSklqd3lfM1o5Zndkb0VONnREZnBsTm5RdjRjRWNOT3paZ2RFLWc3anVXbjlQY0xBWm56Vjd1MFZuaU9rU01FTWpCNEdvRUdHek5nd3lWR3Iwd3N5d1hhNG5ZVFZrMGF4YVA0M1NXUXo4S2NfUXVZMHJOUjhfak9KWG5RTjZ6dUxYMWQ2d0phaHdXVDVfbHJhSzZQN0RMSzJJTVN4alg5cWFvczFKMlFCLW5ydllRNUQ3Mm44a20yanpTMFE2cHpoTUtMTXpLb1VnaEdTWkZ4aWs2UkdmN2FoSmNIVzAyckVEVmxXa1lBT1NDbkpNdzI4cy1ORkREN0hSM1ZSZURyUVEwMHhWSy10VmV2Um1lcjR2bWZTejg5Ml93YjlPdVFSb1daalRqVnlSd1o2eDJCclYydUhjcWFhbWdMT09PMXFZRDBHM25iRGdHODJFdUFYSWh6R2lJTW1MeENRVjdnRHFKbXk2aG5ZTllUajFTVkprY04xRDV3ZWhjdnlXMU5LdE5SS3pkVXp1ZldLaU5XWnJ3N2hENDdHMGFTNWdaaUV5RWRRQlVHUGVoRFRsSmFrS2JXanRpamctN1RUN3BwVlBuX09xbkZNSF9aZXVzUTdOUHpQSEdVR19pYnlab0RPLVJHX1poMHVVUlh4UTAtV1Jnal90N0x2RzQwYzBBUzYwOEpINmVxOTNkNnEwTzVrejc1eEpJR3l6RXNWejJNbzdHSzREUHFlUTJ3WkdnUkUxbFRCTGFobk0waXJSUC1VUUJCVFM0YmducWhPeWtZRjYzT1dRNFo5T0dDMmxnMVBZTVFKVDQtMFhHczJPVGhGcWRzWDlhQlFZeHFtdmNFOU1PQU5xcGFuc0F0TTRJRW5MV01jVmRReUdRT1VIc2tOM2dQR3NfR1RQZF9tMTgxOXBRSmt1OUtFX1VWdFFGWkZESjBpakJ5M2otdE9KR19oNU9NeDZ3aXBhcldOOFBXZEpWNHQ3OW14dWZGSE9Kd2J6ZVI2eWxqVEpMU3IxV1JkeEp1U3lISUgtSXozTXcxa2Q2UzZpMElFaGplNXlKNWc2ek1fb2VjYVQ0SE9nakZBSER2YnJKalhyYXU2dXlpR3dyeDBMRzIzd2ZqVFV2MWFCai12VGRvX1FiU1IwQ2p5ZUphNzhNT0dvclVKS0ZoZTVsZzItVG9QNFFJak1xMUpqbEZaNDFDN04xTzBnbG1idWU4aGhRYzVXYkRmUDdRMEo5QTNfMnlsQ0ZQNVh5dzc2RzZ6MjJtcmZvT1FIa2JCVWQyVnREdkNsZF9tZUhmUTZLMFhhWXh6ckg4YlIyb2FnaVF1WG9HbWEweS1sbDktVTh3WFRvZ2ZmblJKMHBWVjJTR3cxVjNPRnVsNVhiZzNJV3NpcGpnNVRLVUZtdkhfNjV2ODY2RFlxZVZCa3FmaDdoaU16VkZNWUhhWWhscTYtVU03NWpmaE0tZlhVZDV5b1Y2VjI4cjdFN0FpVmR2TXdpWXNiX2gwTG1DWDh4SHNCelJnamw2X2xtQ2pwMmh0V1c2WTJBZWlxeXc1Q2R1Y0tkV0FZUE5ZajFkU05Fa1o1YUZVaEVFOU5BYTdac3hGQVNHU2JFakk0ZDZZdXFSbklMLWhfWHRUb2lnWEdNQ283Uy1tSWg4QU9PaUNOeEdHWlFxdlB6NDl2RThialpSdVB6UnJzc08tc2ZkQkVhS2pOMm5iWlp6MlRpSUVjV09pVnZHeGdRMU1jM3ljRkNKbWxUZ0pRSUtPVnJhd2dJREVlZUliTXlXQXhIdlhpQVFueEI4TVJzdGFmaTc0S0JUN0dXcEI0em9wYWU2LUZaeVowY1NuT3dfSnJ6dEhFek1nXzliZU5xcW41VjRwUG11WHB4aF94NnlnckF2WlJqV2g0dk12Y3kyNEtId0xtd2xvUEJabFQwSE9meDJ6TU9fWFpQQ3daNEpJS0FCLWpjWkxBUmI5OWtRNWRNTHVVNkFFcjE2aHM2cXBZZkRuYVJGX1c3U1E2dDRTeTJoVlEtSjJxRVZQYVZJci1JT3lGVkR3VUJCMFlVSXpmVjN6YzBMc1VvbXZuUWZZMjVkSFJIVTNiUWhpbFhsNFpIY0p3d1ExMmk3S1U0NnpHaGZyOW5fUEdESnM0MGhsdW5rdjM5V0RsM0ZsRlFXNFd4QUJsMWJ6akJkWW1YdEFBektTV2owX25pMlAwZU45Z3JIMXNOaVFPaHJJWmZoNllsTWVGUl9Yb0VzVXhhbGR2YXFwNmFMUXdaRnlWbHJhOGUyVFNNWHFzZ1VLZVhOUXNrbVh5QnE0d1dPM3oxNS05TkExdVFFS0lubGk1MzQwTF9jVGJ2ZWVYRkowcWNSZjJPUTVybnoyT1RRMDlQakdzNVU0MFdoY3NNemdmdDVpYy00WGJrQVVPaHVBMmlNWGxUQzdESlhPMFlzR0NqYXMzNlhidlBIbDk1SllTZl9raGcydkJnbExVSk43RXU5ZXpLRjEyenlOQkFVTnVsWlp0cVRJdHFqams3UkVmdnVvYVJvZ2dEUHNiQVk3YmMwZHdnbFd3TUQwanNkSmVKTGZZNnU3am1WSHpja1Q1aV9UX18wVHNrTGw4STNsTUo1UXV1bnBJWDdQWjIzUnRpcFlVRDBUQ3FGYnpENkpWNmdWNUgxRG10THJLYkVHUXV0blpNVWFWR2otU3NYYjlhOFlqQmtyc0RBSmhNT0k2c05Tci15V2dlTnFCcWdGYUZQSkdsc2c5WXc5MTA2alpOdXJuZnFobmt1VVhOSjU4QXBUUGRyQUF4TmZCeXR1NldpMkEyQ1VSamJEdWtCczRZS0JtOG1KMV9pSG80Mw==)
        FCI_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmd2b0VmVHlXM3JNUFpIRE51MUZvRURLYnBSRXZjeUVRNGpXTlowZTlkc2lvZzhRMmJZMFVGeDQzWXc4enF3MW41SUJrZHNJV1hSZE9PcXhRRjJoUFJuXzBkYlE9PQ==)
        FCI_KEY_PASSWORD: Encrypted(Z0FBQUFBQmd2b0VmZFlBVnZhTk9aeGFYRE10ZFBYVXVVclZfRWNPYzFrT2puY3NWRUR3LXNlMm1qUlZRbkotczBDVEx1dHF2S1diM3pzdzhIRHpvYnVkRG42U0R4bnQ3Qmc9PQ==)
        FCI_KEY_ALIAS: Encrypted(Z0FBQUFBQmd2b0VmUW1sRjd3UWJJRlpMc0UyQzRsa3V3YWxMQ2pYeTdpVF9SdHBETEZ5TjRmTjh2NzM1bEYxM2JUVVQ1cTNIcGx2VHl0SnRmaVZ5TWVfSk9fSTZVX3RaWlE9PQ==)
      flutter: 2.2.0
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $FCI_BUILD_DIR/ios/Pods
        - $FCI_BUILD_DIR/android/.gradle
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: master
          include: true
          source: true
    scripts:
      - |
        brew install gnupg
        brew install git-secret
        echo $GPG_KEY > ./private_key.gpg
        gpg --import ./private_key.gpg
        git secret reveal -f -p "$GPG_PASS"
      - |
        # set up key.properties
        echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
        cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
        storePassword=$FCI_KEYSTORE_PASSWORD
        keyPassword=$FCI_KEY_PASSWORD
        keyAlias=$FCI_KEY_ALIAS
        storeFile=/tmp/keystore.keystore
        EOF
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - flutter packages pub get
      - flutter pub run build_runner build --delete-conflicting-outputs
      - flutter analyze
      - flutter test
      - flutter build apk --release --flavor prod -t lib/main_prod.dart
      # - find . -name "Podfile" -execdir pod install \;
      # - flutter build ios --release --no-codesign
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - morellitecinfo@gmail.com
      scripts:
        - |
          #!/usr/bin/env zsh

          echo 'Installing App Center CLI tools'
          npm install -g appcenter-cli

          echo "Find build artifacts"
          apkPath=$(find build -name "*prod-release.apk" | head -1)
          echo "Found apk at $apkPath"

          if [[ -z ${apkPath} ]]
          then
              echo "No apks were found, skip publishing to App Center"
          else
              echo "Publishing $apkPath to App Center"
              appcenter distribute release \
                  --group 'Collaborators Prod' \
                  --file "${apkPath}" \
                  --release-notes 'App submission via Codemagic' \
                  --app $APP_CENTER_USERNAME_ORGANIZATION/$APP_CENTER_PROJECT \
                  --token "${APP_CENTER_TOKEN}" \
                  --quiet
          fi

          # echo "Find build artifacts"
          # ipaPath=$(find ~/ipas -name "*prod-release.ipa" | head -1)
          # echo "Found ipa at $ipaPath"
          # if [[ -z ${ipaPath} ]]
          # then
          #     echo "No ipas were found, skip publishing to App Center"
          # else
          #     echo "Publishing $ipaPath to App Center"
          #     appcenter distribute release \
          #         --group 'Collaborators Prod' \
          #         --file "${ipaPath}" \
          #         --release-notes 'App submission via Codemagic' \
          #         --app $APP_CENTER_USERNAME_ORGANIZATION/$APP_CENTER_PROJECT \
          #         --token "${APP_CENTER_TOKEN}" \
          #         --quiet
          # fi
  qa:
    name: QA
    max_build_duration: 60
    environment:
      vars:
        GPG_PASS: Encrypted(Z0FBQUFBQmd5OUpDXy1GOEMwcEEtTXV2ODI4bGxrQTFEeUxJU3BhUzBqWmNHNEJqR2UxXzJfY0pFQS1kS3k3cWp3S2NVSUthd0s0eU90cXZDR3VXUWFtamtwNURHa2tRa2c9PQ==)
        GPG_KEY: Encrypted(Z0FBQUFBQmd5OUpDeHlERW1YVVNuQktxNG9lMFhPVzA3Y3E0d0Y1bFVJanBFQWx6TGN5eXhDamVXbXpmbzJ6dkN4VjBncTYtTzdISm5PZXhfMTBHZ2NBdUlaTWktSG4yNXloekkzQk5IT3NUdU9jZEl1V0ljT043QXdwVmdIaEktVXVzUTNhV3h1YmViOWw3cVBJQURTMjVoSGFGbGVGYWpIbWN3YVZWTTA5ZU9Iclc3TjFIbnQ5SWxGeVZveHk2ZlY3QnVNb3RZVExURjEtSVNwNWZmRTNmQk9PMS1Pd2pFU3Y4ZjlXWnRZaTJwWjczUWpSRk5ZaHVQbk1ZTXpXTlRmTjFpVjRZd0NTTk1Yd2VvVzl2YjFJUFZ6NUZpRHB5MVpHaEhmR0pfN0g4eGg4dURTa1p6bnM0UVJTSUNEbHBIbDZNM19CQVp4T1Q2bzBaTm5iN0pjSThILTFLN1ZrVkhxQkQtWnBsNU5EQloyZmxad1hScnA0VzJsd2dYTXczQ21tSVRBVE5mZVFZV05HZG5wZ2w4eFR2M1NGU3dJakJleFJfRnlUTkNPRUUwWXE4VDdXSUlyQjdOVWFFRW85Y1B1ZTNweWxSMmZIU0VpRDV5TmFpM3ZNY3pJS0hlZHlFMjBYOVAxVmliQWVEcW1sQnRidFowMUVxSldwM3FCWjFQSG1BTEo1TF9xbmdJR0NSdll2VndRSzNEVUVqQnBmOVpDbWNSNzFQUnNDeUNDYmx1RmdzRDNZRVp1SlpPYV83X3VkenozTTB3bHR0MlROSl9RZGlheUY5clVjZnRRYzdZRUg5ZkRrenRyaWM0LTF1Qm96c2ZwZTRNOWZqU00zdXpSRDlxRmVnOWp4X0JuS1VfbXlZbVlqMTU4VXdHUTd2azN4N181N2xSU3lhLW1TbGUyOHVzUlAyVEZrOWVWNXhybWY4VngtdGNRWUVneDR2MlFMN1dLUHQtSmpBYWJYRW9jakNibVpIaFVSeVFQbWhDZmhJWWRtNXZ4UDVDaGJ4WUxJaE5ZX1BQdHlfQnBKbmZXRG9NUFZEek1FN3ZSWkhSNmQxdWZrS1k3WkdnRmZIWl9fRWRrdFFoY2I4YXJRRlJVdVVBVmZpRlZfQUt0T2pBUUpsWnFmVEl2WEFWNzJ4TlFxODcwamkyUzdlTW85R3c1bWR5LS1MMlZKVGtPa1VhTURYeDJGVmRrMFRxWkRXel9obzJhcVY1WU9lbUJZcExFaGZQMERZYmVieWpGYXZaLTExbTFMb2RUWUhvQlo1bUVxVklmWF9HeXRXcDc1b0dON21nTFBUYUVkOEJWRTg5a19jaFhvWmREUllwd2wwdWxWbTEtODJJRG42TW1Za2JvVGE3ZjRWQ2NQSnRNb3NiaTdJai1Lek5kZm8zbkRMNWZKYW1WRTBkaTJycTVPQkNNTEFyclh4MDYwdzR0NUxpQTk4ZXJ6UTJkSWxNbmVkb1VKM1gwR3JTWGZqV0xPMlJ0VWU3dEIxTGtiSUJ6ejdJaGtISXhNS2dwTDJCQlZWVFg0bGQ1Y2E5aFZVWEJDazRmMFlfX0x1QzN6dXN2dzJnX0ZVczdfTmRBbXFnaTN2UHoxV2kzSzBka1F6RmhVQ3JpMGtHeFhCVEh6VmdOcWtUbWZUaUk1dE1NX2YxQkR1RWk4MllyUDgwdVNDektkZDhOQ2FkV3pwM2VjampfVnhFRFZ0Sm5TWXh2VDFjYlMwX3ZaMTNsUHpfMFlrVjM0U3BOOTlqU0NQTGJvZlpjbjFpeC1BQnBtNWx3SXVEOW1lNkFEbVNZUDRTenpJdnR0eTVhOVFEMF9pQUljdWpsUUdRbXV2ODZHdHFNUHVId1NJeE1hZTFvZkx4ekhDZkRXZTl0NTY1aF9GdmlGR1YyUVZvYkxaU3dYbTZGcmdvbGpjNDA1bFBtLTdYOWl1dTEzd2hfczJMNlNZQ2VnZUthcEs4THAxbVZ6RGM4Znlya1VTT2JsRm5WMGYwT2thcVlsM3c2YjE0UV80Sk5pNXg3UUt2ZThLYTVSUUlZU2g4N0kxRHdJSnU1ZHIzUUNHWndBblcybkNoMTNzUjd0WFV6V3Fobjk5aWZzZXFFV0tXekhrY1ZtMThqcHJqamFxOHo5Y2N2YzhraDQ5VUlBUDZ1N2lXTGhyUUdtRVJ3bzAyMkVQOVBrb3BHa0tWOGJlbTUwa2tBbjBzMUZWNlpwcXR3ZXZaRHZuUlJFSHJnWFZwaVo0eEdNVjFDT1JfTmlFSzl3ZGFmaWgxalFJUWdpQS1tLUtEbEpKUDZGSjJhR0VIVTE3d19xMmFFWnlNMzFDZVo0ZmZzZ1Rob3hGVE4xWEFYWnFMSEVMdmRjMS1LUlhFRFcwMXlVSDdQUmJ2dkdKY0UyXzVnZXZvSzM1M25vQ1pWaWo1LVB2SnRPNXpUblI0dWMxcEpQZkloVW9HNHBQNGlZRU1yUWRvY3BuREhuNzJxVG9fREFJbmttd2MwX1NERzNSN0RlS3VyVjNrWVRQSHBLbFdVaHQ0S05xQTV1Rk1kUTlGMzdjNzdDTWI5WUFQV3RkYTZRTWZxcnlaSThRTjRDSVczWE5pa2FpWkpOUjk0TTk2bVluNlRLeHJYalNNNmkxNTFUTzVLMDUxQW5WMXkyQktvVWhTVDEwdjlRNlN4LURnMkkweHN0WUo5eVo4OFNwNTZDMl9FRXJLZkRTT3AtRnl4LVJsWkNlTl9yZU45eWhoQlFuMFdiVDZmWVhnRXFSdU50dEV1eTBlc3c4SXE0RlpvYVlCMTZ3OVRPNzFudDlHWW94S0Z2U2xoRVNuVGlaTUhETndHaWZYcVdycEljYWw3emh2RkRianJGdWphblQtQ3R5MFN1UHc5dzgzcmxGZko1S29VaVpQWjlWc2JXYVVNaU9IMUl0Ry1qWFIwSmFqMC1zRGQwN2l4OWRvSDFZcURQTmNLeHJmZzZ4QlZwM1dHdW1odVZCOUN2M0NsX2NpendvMXUtWl9FdS1FbjdCV0ZZQndVakRLeE9tMGFVa09jUXBFYlh1Z29ia0FDZU9wdTNDbXhKWldmNDBDbTI1Wnp6MkxqelYycV9CdkdGSG8wN2tXNmxMb19WY1BmWThwVHFJQ2Q3WmJqZXNvbWFuak92dHNQUlZ1VlU0M3FKc2pfcFNPZVBtdWZBbmE5T1NaZWk2bS1NUWdmc0xNcUtTNlNPNkROZm5Mc0lZVjFBRU5NTDZDR1hTcFk4R3Q4cHVJRVlPaWxEVVlKRzEtR1ZmWDR5cms0SGxXeXNJQTNieTBBelZfVmZGMUxDQXJDZWtyeUpNVUNDbE5IemRaZWsxVEEzM29TMlh4NHdpdnpvSFpnbWVuaWZ0X0E2WGI2QjhKbExMSk1rMUpLVW9PTXJydVFoS3ZZck00QkVRQWZkYl9ncWk3bVJoRkdKUXpNZm11bG5LSGNrVlZacWQzSzVWQmNNQjNOQURERnpzWUJrczhpWFY2MFlwRERmTkJWckNlbEY3ZnpsUzR4SzBKZTlld2NwTnRpVG5QZFBqMTlCaVRXYmdxMU9LbkNvZW9Wd3AwcXduT0phZmRFUjhZM182V0VQOFFFa21qem1pUklXaVRrcGFsYW5IMVpYR2lXTHpzNTFFSi1MN1M2UENmWVUzTjloVkxFNFRRMXpNVTFHNnAtWkxqdVBqTm9LNDJ5OXFvWFV4d1pUeTZIYldRTW5PakprdjBKXzZaSEFjVDZwcnVnWGxLUk4xR0IxcW9mb0hMYlZMZjN1MndMQ18ySGVmMUxzUlRkVVloRkV2ckN6dWxxbGM3ZUtSV0NNLU5SVmxrT21hLVZnY244MWcxOVFwSW4xVnpZTVp0dVpFMEpvRW9SZGEtNmF1b1ZmTkc5bnZFV1l5XzZpUUhPamlfdUZSa3I1WEYtQVA0bnVZSndPSWRyZWQ3SWRUbWNrM1ZUVkxYYWM5S3lYaGY5ZjE4b0d5ZXhkdHhMaWp1OUJIM1ZySGJWdEJ4VHVKOS1SNzlIVUJoQTdSc293X1o5R1NpR2RCUXdpTjdCZGNFUGdacUk1dUpQUjc3TXhhLXBMS2NwQXlaek8teV9EUlg3ZEEtUmZUN29sc0Qxd0JOS1RPMmdMQ1VYczF1RWpqd29tdlhlS0lVN204bmhHMlFneU5mZVBSaWllV3RLZWg4b1psaUo2bjJ6amVIb2RHbEZLeXJpVHZtcGpVV0JUb24zN3ZBbndBeE1PZVJOUkpjYnA0bURnQl9YZTQtRklVTHROWWlDX0V3UWZfY3N3Q1JDeGpZeXZsa3Z1NVQ5ZHVhTlhOZlZqc3FGdFNReFlyWS1GWmJSbnRzTXdja3lMcC00RTBJSlVwNWdFdWJFbEZGY1JoSERKcTJjcHZMamk5TmJVaVIwaE40cjRLZHZZQkZCekRhLXY5WUFZUklLbnBPX1RpaS1oazNrZU0zbGNwWEZRMkE3UlRGbVJpMkFzVjhZd2pVb2cyQWc9PQ==)
        APP_CENTER_PROJECT: flutter_getx_template
        APP_CENTER_USERNAME_ORGANIZATION: morellitecinfo-gmail.com
        APP_CENTER_TOKEN: Encrypted(Z0FBQUFBQmd2OEo0S3JMVkZLcFFzUGRPSXFoZGZ2WHc0Tm83enJIeWNib1g2elRWUlVhaU85bFdES1JCOXBUMDN2b01TeHB3UXlabE43VURnVTVXZG40OGQ5ZTgxeV8yWUZKWVlmbjJCbzdUbl9tTXpwakpxWjhlUmFVcTVpX19PeU1qMXRSY2FsMjM=)
        FCI_KEYSTORE_PATH: /tmp/keystore.keystore
        FCI_KEYSTORE: Encrypted(Z0FBQUFBQmd2b0VmSy1yUHplcVItMXVqVnB6NnRxS2w1NlVtZEQ4RENGSEhSdFRvYjlWcGhWR09kZWxGYnJnUEQ4TXB6d0JQak5qWHpOTW1yV2N3RmFCWG1Ob2NDVlVpX293N1NxaElRMG42d2p5WkJxNk8tem5DeTk4UGlQOEJ0dXkya01obC1vWWtYOFBsXzZxSkV4LU44UzhuUWpFRFhjMGI2anNzMUtCdkRRMl9ud1VkdFVWb0lEVUNjUF9XYWhQU1YxM1VJQXN3bUZkLTZ1NFZIM1l4b1hoWFRtajFlV1o5dHhyLVBZa3lpVlRIZDVyNVA4SHVFRV81Y1ZjM01CQVhwMF9JTG5UbV84ZnpaS1VHZjRhR0dUMkdfVXMzS1FFdGZ2VzBDVkg1OVRhWS1KNE90di16YUpHM3VhMFJnN3RGNnNOY0ozTV9uWFFkTHJMRVRncnpzZk9ZZUpSU2I2RVU2aXZfRTNUREtleFhpRi1TczgybjkxX25tNGRFOXQ0aWVGZmFWQ3dtUUM4aVpWZWRiVDI5b2U1LVAxSTU5SVRyZ1dqQXpFYUZCTTE2ZVlGcngtekFObEN5bVMwekZtU0hOV29KUXMtUmhkQU15SGUtSVNnQTE0OEtFWWZNeU1iZ20yWjR0N3Ztd2t5OE4tSkZ4cGhOd0dxa1ROaUt4YkVXOHVFSFFhQ1hTRGFRdC1ueVBFU2J3di1aN1R1aDVRWHZvekhwWnNjRkdkRjEzUXhxYVFjNU8tTVJ1dUhwQ2FLRk9vRzMzYVVldHQ0ejNYNzBwbkVRNzF0Q185LVJfenhZMkxYb0pLZTg0ZW8wLVhnOWNMeTQ2d0cxSWxQRV9yRXlaUzJ3WjdFZTFlN0xSMjN5T3lKNUg4dDd3WTRjODJlS0NYS0VqanY4Z2JrbU5DcTRpLTRrVHNIaXlGeUVFOGxWS2o2UF9UbXBxMmVVaDlnQlN6QU9MM2xYWEFZdTM1bnJTME5ldUYwSDhFaTZuSHZ4X0pkOUl5eVhHaUJnSUs5R21MM0hXdEFVT19QOGRTa1pGcDV4cmx6bDg2X1YtbDZBdklPaFFRQ09GYTFtUkFpY1dneXFnWGNrVUdXaFpGSW5zS0R6Q0ktZU1QS0FTRm5nSHI5VXBBTjhjUVQ4eDdpdGVPS3Nva2g0UmNhMlh4bHhjZVM2dDdQMldCeG5ZOGVORk1DeXN0OEllWG5sNlg2ekpGUllrOHJDbjdOWUYwT0xZUUJyNTFPSHJlOUdRR3lTMEE1Q1U1Z2taU2VfU2RES3gtYk1QV29lZVRrUG82dk0zUUZXVjFmWUFMbDNKZjRTMGltQk1Ma2h3SmlPX2swNG9NZ25MNGdVY25XY3Q4bUNHYnVCLV9iRkQwcGhIRUp2d00yMGlHeXdqTFE1TWRucW5vNmNIWGZzWGdlMUZRdEtKNnR4Wl9JVEVFYjRidTlwUl9YbkVHZ05WdVBGalUyVkRFRENCRzMteFM4bnlpdmhWUHE4RUtyOWloR19Zb2xHMGFQNXFRMFFyWF9zMFA1bks4VGpUbFIwSUc4bWU4Zm5IWWxUVDZzUWNhT2tiM3BYSERuMHVHeThCajZteTR4VkV6aXE2bzAwZ2lFQVk2cUJWWHdNSUxPUjZaZTBUM3JMcUd4TmFWZGNBOGk2WlFNYU90WXBhUlRTcFd4MVVqSnJNbm1tV1lseE9CTWlST3RFUlNSSTVEeW5ueUVhNW9qSGVTcGJqNDdwSWVNcHk5Zll2MkRReHI4NklqcWhuejZndDhWM01ZSUh1bHY3dVZVLTNWRlliUURkell3YldfQjdxUVZFV2ZLaUs5ek1XcDd6M3RGM1RySVdlNExXVzhhTUxtWFNXbEVfdVVZRktTM2xRTHRIZkdtMnRnSlh1eHdHZ1R0X0RqaDczRURTU2ptT3p6OHhRbUJMaWtUY3o5TWlpTnNJSkl0a3hiWF9MRGdxVHEyX2xHSG11UmJrdVpIUkkyTVBRb0xiUW5XbnJvZG11ZjV3M0ZWd0o3R0VoQVNDcEFTa1oxaDB6enBLMUVHOWVTWlM2RVVwY2YtbGdWRHFabG9vVGNoWG15LTlDc2lxcE11REZUNjRMei1paE5uVE1RX2V1a3dDTmd2Zzk1WldId0x1TXd2aHR2WXNzWFgwb3dvX2ZIamRwclRYSGFVcmE1YmtFa1E1WHRPYXZZZVowa3lyYy1fcGRiQllISWVLQ1RVR3BPTy01YWp2bUFoRVdYOWRTUURoc2tLSnVqanB4VEdkVVJBT3B6bUR3aVE4NHFGY0I3N3hsaVkxNmVON09teEotc1VLV3NlcVRNU2dKaUxTWmZCZ1laUDdZV0NrMlVMQXRhUFJrM2NTV2htVEhIZ09Xam5HTnh1bjBqWWxfcTB6U0RkMUhjZGpONjZrRFp0cnl4aVBOSTh1Z2lJMTFnUlpTcWNKbGo0dW1ZcUFZQWVPdlRKdVVSR3puT1lET056WjNPdWY2NTlFNVA2MjI1SzM4eENYbkJ3UVFCbkVLYjBobDlQV0dacmtZMXc0U3ZmbWJsR19BX2JjM0JGa1RNMnFoS0t1NXdiNUczbUtHQnFLR1ZZbWpudDU0U1RYb0poMkd4LTZDZFVUeEhDTGRQdE5UdVM5WG9DYllfRW50RzVrVERXRUJzRzNGZmFSUXZDSkxlbHZUMUdDUFlaV1RJSmdOdmFfS2hRWnNPYUp1TjhGczJXTlJxZnNlQzJSOUhpX0w1RG9FUmpvajlZd0xDSW9wQWx0VUY1dlBJVGUzbVpILWNNMFJzS29XT2FBUVFmTUZZYjBoelpXbmtKaU41emRYdkFPcjlSTUdHZklybEUtOEFZTnEwRUhoTllsZlUwQ2VYdFNqSnN3YkEtZjdFb1BqaXRKSTA0eEthZG04ZUZPZlE1VGFWbnlNZmVkZjZCdU9VR2VuZF9ROVBPSm14ZGVBT0dwYng4eUFXNU8wcDJBTmUtZVQyV3VvclFJVmRfeWc4ejg5UjN6WWNfQW9QX2FYQW5XN0JrUVkwTkxveE80Y2dNZmh2ajdnSm1zYU5qcDJfRXNqUXlselpqcG0yNEhOTHU1QlpGdXdfZkhGcnJyX2dFLVBYWUxmd0ljWHE2MExaYUxvd1Z2dWZwNUpXWWZPVEJ3OTd4ZHBQTlRlSDJpRzhGZUYybnQ0M1haNjA4OGxpTVNQa0JtYUgwVVdVRjNyRjlydjZTVTdNWGJVbU9VRFNGbzc2ZDEzd2dwUmx5cmtrblh0RUROaVhvRlN2cHFtNzRnN0FOZGZXZTM4SG9GSDFkRm01U1JUUy1HMVNxZjNkbENCWWtoMHEyVkthVG9YQ2Y3M0JfekhMS3ppcTBiVkVtLTlVc1dIazF3ekt6NDJiVGxKRlFFaEtkLUgzbzVxSklqd3lfM1o5Zndkb0VONnREZnBsTm5RdjRjRWNOT3paZ2RFLWc3anVXbjlQY0xBWm56Vjd1MFZuaU9rU01FTWpCNEdvRUdHek5nd3lWR3Iwd3N5d1hhNG5ZVFZrMGF4YVA0M1NXUXo4S2NfUXVZMHJOUjhfak9KWG5RTjZ6dUxYMWQ2d0phaHdXVDVfbHJhSzZQN0RMSzJJTVN4alg5cWFvczFKMlFCLW5ydllRNUQ3Mm44a20yanpTMFE2cHpoTUtMTXpLb1VnaEdTWkZ4aWs2UkdmN2FoSmNIVzAyckVEVmxXa1lBT1NDbkpNdzI4cy1ORkREN0hSM1ZSZURyUVEwMHhWSy10VmV2Um1lcjR2bWZTejg5Ml93YjlPdVFSb1daalRqVnlSd1o2eDJCclYydUhjcWFhbWdMT09PMXFZRDBHM25iRGdHODJFdUFYSWh6R2lJTW1MeENRVjdnRHFKbXk2aG5ZTllUajFTVkprY04xRDV3ZWhjdnlXMU5LdE5SS3pkVXp1ZldLaU5XWnJ3N2hENDdHMGFTNWdaaUV5RWRRQlVHUGVoRFRsSmFrS2JXanRpamctN1RUN3BwVlBuX09xbkZNSF9aZXVzUTdOUHpQSEdVR19pYnlab0RPLVJHX1poMHVVUlh4UTAtV1Jnal90N0x2RzQwYzBBUzYwOEpINmVxOTNkNnEwTzVrejc1eEpJR3l6RXNWejJNbzdHSzREUHFlUTJ3WkdnUkUxbFRCTGFobk0waXJSUC1VUUJCVFM0YmducWhPeWtZRjYzT1dRNFo5T0dDMmxnMVBZTVFKVDQtMFhHczJPVGhGcWRzWDlhQlFZeHFtdmNFOU1PQU5xcGFuc0F0TTRJRW5MV01jVmRReUdRT1VIc2tOM2dQR3NfR1RQZF9tMTgxOXBRSmt1OUtFX1VWdFFGWkZESjBpakJ5M2otdE9KR19oNU9NeDZ3aXBhcldOOFBXZEpWNHQ3OW14dWZGSE9Kd2J6ZVI2eWxqVEpMU3IxV1JkeEp1U3lISUgtSXozTXcxa2Q2UzZpMElFaGplNXlKNWc2ek1fb2VjYVQ0SE9nakZBSER2YnJKalhyYXU2dXlpR3dyeDBMRzIzd2ZqVFV2MWFCai12VGRvX1FiU1IwQ2p5ZUphNzhNT0dvclVKS0ZoZTVsZzItVG9QNFFJak1xMUpqbEZaNDFDN04xTzBnbG1idWU4aGhRYzVXYkRmUDdRMEo5QTNfMnlsQ0ZQNVh5dzc2RzZ6MjJtcmZvT1FIa2JCVWQyVnREdkNsZF9tZUhmUTZLMFhhWXh6ckg4YlIyb2FnaVF1WG9HbWEweS1sbDktVTh3WFRvZ2ZmblJKMHBWVjJTR3cxVjNPRnVsNVhiZzNJV3NpcGpnNVRLVUZtdkhfNjV2ODY2RFlxZVZCa3FmaDdoaU16VkZNWUhhWWhscTYtVU03NWpmaE0tZlhVZDV5b1Y2VjI4cjdFN0FpVmR2TXdpWXNiX2gwTG1DWDh4SHNCelJnamw2X2xtQ2pwMmh0V1c2WTJBZWlxeXc1Q2R1Y0tkV0FZUE5ZajFkU05Fa1o1YUZVaEVFOU5BYTdac3hGQVNHU2JFakk0ZDZZdXFSbklMLWhfWHRUb2lnWEdNQ283Uy1tSWg4QU9PaUNOeEdHWlFxdlB6NDl2RThialpSdVB6UnJzc08tc2ZkQkVhS2pOMm5iWlp6MlRpSUVjV09pVnZHeGdRMU1jM3ljRkNKbWxUZ0pRSUtPVnJhd2dJREVlZUliTXlXQXhIdlhpQVFueEI4TVJzdGFmaTc0S0JUN0dXcEI0em9wYWU2LUZaeVowY1NuT3dfSnJ6dEhFek1nXzliZU5xcW41VjRwUG11WHB4aF94NnlnckF2WlJqV2g0dk12Y3kyNEtId0xtd2xvUEJabFQwSE9meDJ6TU9fWFpQQ3daNEpJS0FCLWpjWkxBUmI5OWtRNWRNTHVVNkFFcjE2aHM2cXBZZkRuYVJGX1c3U1E2dDRTeTJoVlEtSjJxRVZQYVZJci1JT3lGVkR3VUJCMFlVSXpmVjN6YzBMc1VvbXZuUWZZMjVkSFJIVTNiUWhpbFhsNFpIY0p3d1ExMmk3S1U0NnpHaGZyOW5fUEdESnM0MGhsdW5rdjM5V0RsM0ZsRlFXNFd4QUJsMWJ6akJkWW1YdEFBektTV2owX25pMlAwZU45Z3JIMXNOaVFPaHJJWmZoNllsTWVGUl9Yb0VzVXhhbGR2YXFwNmFMUXdaRnlWbHJhOGUyVFNNWHFzZ1VLZVhOUXNrbVh5QnE0d1dPM3oxNS05TkExdVFFS0lubGk1MzQwTF9jVGJ2ZWVYRkowcWNSZjJPUTVybnoyT1RRMDlQakdzNVU0MFdoY3NNemdmdDVpYy00WGJrQVVPaHVBMmlNWGxUQzdESlhPMFlzR0NqYXMzNlhidlBIbDk1SllTZl9raGcydkJnbExVSk43RXU5ZXpLRjEyenlOQkFVTnVsWlp0cVRJdHFqams3UkVmdnVvYVJvZ2dEUHNiQVk3YmMwZHdnbFd3TUQwanNkSmVKTGZZNnU3am1WSHpja1Q1aV9UX18wVHNrTGw4STNsTUo1UXV1bnBJWDdQWjIzUnRpcFlVRDBUQ3FGYnpENkpWNmdWNUgxRG10THJLYkVHUXV0blpNVWFWR2otU3NYYjlhOFlqQmtyc0RBSmhNT0k2c05Tci15V2dlTnFCcWdGYUZQSkdsc2c5WXc5MTA2alpOdXJuZnFobmt1VVhOSjU4QXBUUGRyQUF4TmZCeXR1NldpMkEyQ1VSamJEdWtCczRZS0JtOG1KMV9pSG80Mw==)
        FCI_KEYSTORE_PASSWORD: Encrypted(Z0FBQUFBQmd2b0VmVHlXM3JNUFpIRE51MUZvRURLYnBSRXZjeUVRNGpXTlowZTlkc2lvZzhRMmJZMFVGeDQzWXc4enF3MW41SUJrZHNJV1hSZE9PcXhRRjJoUFJuXzBkYlE9PQ==)
        FCI_KEY_PASSWORD: Encrypted(Z0FBQUFBQmd2b0VmZFlBVnZhTk9aeGFYRE10ZFBYVXVVclZfRWNPYzFrT2puY3NWRUR3LXNlMm1qUlZRbkotczBDVEx1dHF2S1diM3pzdzhIRHpvYnVkRG42U0R4bnQ3Qmc9PQ==)
        FCI_KEY_ALIAS: Encrypted(Z0FBQUFBQmd2b0VmUW1sRjd3UWJJRlpMc0UyQzRsa3V3YWxMQ2pYeTdpVF9SdHBETEZ5TjRmTjh2NzM1bEYxM2JUVVQ1cTNIcGx2VHl0SnRmaVZ5TWVfSk9fSTZVX3RaWlE9PQ==)
      flutter: 2.2.0
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $FCI_BUILD_DIR/ios/Pods
        - $FCI_BUILD_DIR/android/.gradle
    triggering:
      events:
        - push
      branch_patterns:
        - pattern: 'develop'
          include: true
          source: true
    scripts:
      - |
        brew install gnupg
        brew install git-secret
        echo $GPG_KEY > ./private_key.gpg
        gpg --import ./private_key.gpg
        git secret reveal -f -p "$GPG_PASS"
      - |
        # set up key.properties
        echo $FCI_KEYSTORE | base64 --decode > $FCI_KEYSTORE_PATH
        cat >> "$FCI_BUILD_DIR/android/key.properties" <<EOF
        storePassword=$FCI_KEYSTORE_PASSWORD
        keyPassword=$FCI_KEY_PASSWORD
        keyAlias=$FCI_KEY_ALIAS
        storeFile=/tmp/keystore.keystore
        EOF
      - |
        # set up local properties
        echo "flutter.sdk=$HOME/programs/flutter" > "$FCI_BUILD_DIR/android/local.properties"
      - flutter packages pub get
      - flutter pub run build_runner build --delete-conflicting-outputs
      - flutter analyze
      - flutter test
      - flutter build apk --release --flavor qa -t lib/main_qa.dart
      # - find . -name "Podfile" -execdir pod install \;
      # - flutter build ios --release --no-codesign
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - morellitecinfo@gmail.com
      scripts:
        - |
          #!/usr/bin/env zsh

          echo 'Installing App Center CLI tools'
          npm install -g appcenter-cli

          echo "Find build artifacts"
          apkPath=$(find build -name "*qa-release.apk" | head -1)
          echo "Found apk at $apkPath"

          if [[ -z ${apkPath} ]]
          then
              echo "No apks were found, skip publishing to App Center"
          else
              echo "Publishing $apkPath to App Center"
              appcenter distribute release \
                  --group 'Collaborators QA' \
                  --file "${apkPath}" \
                  --release-notes 'App submission via Codemagic' \
                  --app $APP_CENTER_USERNAME_ORGANIZATION/$APP_CENTER_PROJECT \
                  --token "${APP_CENTER_TOKEN}" \
                  --quiet
          fi

          # echo "Find build artifacts"
          # ipaPath=$(find ~/ipas -name "*qa-release.ipa" | head -1)
          # echo "Found ipa at $ipaPath"
          # if [[ -z ${ipaPath} ]]
          # then
          #     echo "No ipas were found, skip publishing to App Center"
          # else
          #     echo "Publishing $ipaPath to App Center"
          #     appcenter distribute release \
          #         --group 'Collaborators QA' \
          #         --file "${ipaPath}" \
          #         --release-notes 'App submission via Codemagic' \
          #         --app $APP_CENTER_USERNAME_ORGANIZATION/$APP_CENTER_PROJECT \
          #         --token "${APP_CENTER_TOKEN}" \
          #         --quiet
          # fi
  tests:
    name: tests
    max_build_duration: 60
    environment:
      vars:
        GPG_PASS: Encrypted(Z0FBQUFBQmd5NXd0cW9RQmxZQzJ6Q2tvUEhZLVdySE9TUGRpamVTcUhVbEYwcDJTTENOeTExQ2o0TG0xekhFZmp3ZVNvU1gzUGU0ZUZraUdCb19lNUhiclhCRmpVVWxVRmc9PQ==)
        GPG_KEY: Encrypted(Z0FBQUFBQmd5NXd0OTEwc3B0NmFFWVFGaXBMUDBBcmw0Q3FZREpfTlRHOUJKU0JkY2lUNkxnNndOV1RTY3E4TWs3NkZyaHJMbjhPMUROMFpKbllYdVBWaXhnbS0ydWwya3phSElCZWxKNmM1clVpZWwzQ2p6NmpMYW03Z1BlRTlGZ1VuUVJsanJvM3pYaVFDUlh3cm8xdmhCQVRPdzJGNGx2Q28yLU9SeEp4QUFuc1NfM3B3VVkwT19HYUY4LUhRVS1ZdGxoVldSMkg1bFFaYVpITFE5QkRNc2FsS29QYTRBTVhlY19IWC1hVHJvSERaZ1lWUEV3STF1LV9IbXhkZTZnX3FDVkxpYzh4bVlKRUJrUldaaGdVZV9oQ01QVkdQYVl4WUpaUUxDd2tUZ0UxVDVfcEVKeU9RWS1xX1hnQ1NBeGdZZXJScFJSUVNiMmxxcUhKQk9XMl9LMGtEb0ZCaHoyLUVCQ0NxY1NSMEU3LS1HWkYzLVJQWW15VUR1OW1WRXY3NXI5aHF0RDJ4WUFiOXZnZGZwNG13WW8tTmdVLUZGWUVxaDdJSlA5bndwQVdiSnpwOVdVZm1LWXlpbEZsODVEUjBXakVfUDRZUTBoMjZ1TDdfQVRQWG9ybzNYdkdXNFZwb1FyX3JVVzZkWjZzQUg0Q19RVS1EZW02MkZkZ1ZtNnEzODVNVUp5dEtXdlBwdTJRMmwySGgzUnN1VkwtakZ3emVHMWc0WmxjdGU0SjhHQmlXSXZBOVQtRGdERURvb1BsMy1aTnRhVGRjMnQzZVJTUjZCd0ctMXNMaEFMSkstb3FWa3NmelMxSU1MY0c1TFcyRWIyVWZ1blVxbGlzMHJJeGpUX1VLM1dZeXJqcS11dVdOcjczWjFmMC1tYTNjTHYtY2ZXek1VM0FwZFNHcGdKa1dxcU0xQnotcG5nV05BemtfNVdNel92MHNmR00tVWFyWHh0amc0X0dBSUI3NnNSRUdSLWdMeFBxeWRXdkNNMFRKZnl4QUhqRkJOYi1KdExrcTd5Rk1rWFktdlRLZjJSTks4TlpDbklpMUlHb293VmpZRjJyRWRkRjlVcDI1SmN3RFpBNGIxWUZaMVlMT0ZLT1owRGY1bi1rYTZya2E5Qy1QckhzbW15WG5JRDdtc09mWDZfOEExTzJkNU5mX292X2ROeDN1R1dtNUU5SGp0SGNzZmVGMGMyWHkyc1QzU05qbzZZbURhbnFMTHVOd1BvaXkyUkdPZ0thUXR2V0d6ckY2TFZkVFZRM2RyZDF5eXdJM251RFIxVUdPV3A1UXBSNzgwX0lFTUdqWHVUNjRHY1ZsS1FXRTE5OVY5b09fdHpEbnlJVF9YTEE1MGw0TFp0YWxQbFhxRW12dWlVck9zdHNZbG9HV2NEa1NsZGM5a2VYSFc1aW1EWG45WjZzTVJKQkgwbDFJZmhxQUZwamxDSEVBTDFPV3ZsQlhqSEpQYWFJalVkTTNBNHZHdnQzQkRIcGhGRDJhWTZkZ0huVl94WFY4OENwcl91NzFUVFkzQnNXMTVWWHZCam41Zjl2cWhjeVh1VUNkMndISkFnUFVKS3hxNHM0bHRrY2lUQ3hUZjV2Nmo4dlg0QnNGZll5ZzN3UXc1TzA1ZlR2Q0htYnFoQ05jSWFoVFhkYjZYUEQ2UkN6R0tibHYyMi1rRnpVTTVPNHhMU2lkdjFEemVjckdMSi0tVllwSHM3R0xKbGllVG0wY3hOdld4VWt4V2ZtUnFQMmJmc29CeTN2VXN6aG43V0JVQjJDbXhVVjBNbkVYWTI4TmtLZ0pDUFljQ3gzWHlERnM3WEZZVEQzR2V2Sl9yN0NEbVA1U0FmUUZNeXo0U3dMMVVUNkh3bC1qZnM0ZmpGTDVhZFBEMWdmemVaUzBESUNISDN1cFhqdi1OY1FpUXdNZW9mR09mU2E5aWNGejhuZ3VfTzFrblZEZFlVVzlqajVISGxMY09aQTFka0h6TG40VGJfWkw2N2JMMjBJbEw5dGpXSUhabVh1OUFyVkNpa2Y1bEdmZEU5SmtKd1pKS29rcHpCeE5hczZjQS1SMWFjVXREZVNuV2lXamJwcVpnNi13T3hEMGtjSXVjWEpGZ09Yd1lLM3JjYXBmdlNud2I2ekpSYnp1cUMxMUxNdVUza0JRT1FhTW1XOEQwS3c5Qms2MGhIUTNlekZiTVVCZXdhUmZ0b3h3cHYxUm9LSUNqVFBrdnBpTTlDUHhVUzI4aFRWYjZ0ejZ6cndxdmJPanZsZVd0N1Zfck1HV0FySGZ5cTl3ZEduWV9kbkpySFZOOWFYRVhRdkhmc203T2FfbF8zZnVNTGJZaTdua2JPQ1FKbktCUUdHU1oxTzNjY3BkbDhYc0xCZHlPRXhPT0I1YWpZZUR3Y28tUHNRRzA4a1ZxQ3JGOXVTSGNHZm9XVERETGtjYTFOWkhOelYtazcwcDd6aThrVTk3WWZ2Q3pDVEw3NTU5MDkxUklvUkhMRU9kRHJ0Wlc5TkFpaEx2NVlrVTVwRHNSZXZYM0JEWG9tZnlIMlQ4SW1oM2FGQXl3UHhvTG5oS2FUZndxUGVXOG5zSW90SWVadjM0NkRHLXR0RnBJZmlOdkRpaWt4Rkp6ZnJ5eVFJZDhZYmlTa0dYZXUyUDc5TXMxcmZvTUZRaUxLN0p2UmUxZXl5aDlmQmVoSEtMazVxVUU4OVhEWnhfRnd5UEJ5S0Jwb3JldXg2ZC01UGlwaTgyR09PZnZkOEU0Y0lha0FGUVl0M3hVV2NBeU9VRWJ6cUxzM3E5MHZLbFYwRE1POXQ3VjdjaV9Nd0w5THl2eC1jOE5iVWtTWmRzcUU5d19DejRhZTBLNXRNR04yWnpINVZDUnV6cFFDZ3lpTXBNM0FuRGdBOUxVTm1rRHNJT0hhTnZzQkZLZkFQUWw0ZjkxOXRmWk9CUkhJa01kRkFlUWdZOHRYWU5zR0Y2bmQyN3NwbzRHeWdoSjFVNXV2WktHbnVkbS1NSmV0VzlZWkdtNV9QT0RqZTNPRU9fWXFKaU9wMFpjNEZWZHhpWENtUzE0VXU4R0JBOWsyTWpuUUp6d1UxYWVJTVJYNjQxc3Rac0Qyd283RmFtdFRSX19TOVpmeDRFT2JXZlprWjFKenNXZHRfS1BDczhpdDFUa1BPeEtWbFl0YXNSWmZqaFdGZWNSaTI4VWh4WWdKQlFKZThhNHl3dkEwOEViNDM3MnFFSGp6WHVYYl9aME1PTVBmRWkxX1hXMm1FOGlpVVAyY0ppc0dyUkdzeEJKdFdxdWRQSnhsNmhISmZ3VldXZVF0Yk0yU1hFcXhFVF95Q0JqV052WC1EQUw5bURvVWYyRFlSZ1ZBUGp3MWhrZDdKZmxFSUdHbUk1RkxDYVBlTjVuTkxNNl9kcnRJQXlIcXpJVEpoeE5aZlRFb2hUTzJONU9FWjd1aEFCOXRYeG5FaDd6Vnp5TTMtRk9CWHZGSTBqQU1lZHg0LWZXUk5PVlNoWEhoUExGamFwTmE4cVZJM1d6dFNVZHM3OW9weXBKNmZvbUV1QWNrcVlYNzVLeHAxei1qRDhKUDFXMWszZVhrLVFFcVZDbkwzYnNWaXBfaGN4MWw5QzI5UkN6eEVlaFZmNjAzLXV3ME1GUjgtU2dvOEJ4Y05VNHdjNlBQT3JoTG9heEN5VTVEa0hnSmhoVk0xNlNqUWRBWE1LbDd0cWdNSlROVThPWldTX2dXUlhzcTdKdVQwMlZyR1JFd1NRMnJHaW5SY0ItNE1uUTRFTTRyVWwwUkNrQ1N4cW5yOVdKcmh6dU5kVVBrc3pWMEZtMmZFWU9MbTFHcUwxQW1Td011RWlZRlFLejFQYlVpVVIxVTNzOGJ6UmozTDRxZnpwbTFjaHNrWU45RzEwc2d6UlZWbXJTWkRUaC00UERQWlk4cHAtSHctNjV1MlF2N0RRWnB4a1dpOVplMlhRRkpxUW0xd3NxdlBvTXRMOHNDZDBsX3NodEtUcEpqQ0tVbGRGNW54Ql94T3JXbWxUNFZ6RG4wa3B2MDY1ZkRIVTFoeUdGTHd2b2FEZU03VzJEYnBaTmZ1LUl4VVZKeHBnYTFIa2VTNzIzYUlhUXpfbmtrbEw2NktjcWx6b0ttclM0VWFMUm9zTnBSQk1yclZuR2xUQ2hwcS1VXzRINFhuZjUzQWtDSi1oaVJRdXdYRWY3eEF4YmdyYTJYaFRab01FQmZGdWVUbkZfandnWTdSMC1NSzRvTURQVHVYdjB1RDFSNGtCTEVhaTZzOGNNakVJQVlEdDkwWklfNW5YSDdyVi14YjJJaU92aE8tUkxtUlZ0ZGV3bk5Qb0F1U25sUGNqMGVjLTF5aG1QQ3RsYktiOWdyN0xVTjJmYXZ5cXZ3TmdXSDFHMUlsMUd6MURyRV9uV1NKa2hockMwVS0tcDh0U1h3clltT2VPR0lxU0ptdUdtRVVBREpYb2k0UDVfOXljMU0tTFdGeDdNeE9pS2c9PQ==)
        APP_CENTER_PROJECT: flutter_getx_template
        APP_CENTER_USERNAME_ORGANIZATION: morellitecinfo-gmail.com
        APP_CENTER_TOKEN: Encrypted(Z0FBQUFBQmd4MHlSVE5pMTdFWXMycjJEU3FiWGROZnJ3MjdRMUVXLVIyY3htQ2tOeHFUU2lKNGk2cS1VV21BWTh5MzNyd3JTSWJSRHJKejNxa1FHQ1NObWtxRDRDWkh0SWs3OVhpYU1yZHVpS01JQ3EyUjkxYUdyQW1BM3ZZY2xIQ05TQUdFVFdRWXo=)
        KEY_PASS: q2w3e4r5
        KEY_TEST: |-
          -----BEGIN PGP PUBLIC KEY BLOCK-----

          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
          noNapeXCGpwKUlo/sHsvetkWcIqyQ61lh5A=
          =ZVPE
          -----END PGP PUBLIC KEY BLOCK-----
      flutter: 2.2.0
      xcode: latest
      cocoapods: default
    cache:
      cache_paths:
        - $FLUTTER_ROOT/.pub-cache
        - $FCI_BUILD_DIR/ios/Pods
        - $FCI_BUILD_DIR/android/.gradle
    triggering:
      events:
        - pull_request
      branch_patterns:
        - pattern: '*'
          include: true
          source: true
    scripts:
      - brew install gnupg
      - brew install git-secret
      - |
        echo $KEY_PASS
        # echo $KEY_TEST
        printf "%s" "$KEY_TEST" > ./private_key.gpg
        cat ./private_key.gpg
      - gpg --import ./private_key.gpg
      - |
        echo $GPG_PASS
        echo $KEY_PASS
        git secret reveal -f -p $KEY_PASS
      - flutter packages pub get
      - flutter pub run build_runner build --delete-conflicting-outputs
      - flutter analyze
      - flutter test
    artifacts:
      - flutter_drive.log
    publishing:
      email:
        recipients:
          - morellitecinfo@gmail.com
